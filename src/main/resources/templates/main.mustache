<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
    <title>간단한 지도 표시하기</title>
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=lhg13pdjls"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://openapi.map.naver.com/openapi/v3/maps.js?ncpClientId=lhg13pdjls&submodules=panorama"></script>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>

<div id="map" style="width:100%;height:400px; z-index: 1;"></div>
<div id="pano" style="width: 100%; height:400px; position: absolute; top:0; z-index: 2;"></div>
<button id="quit" class="btn" style="position: absolute; z-index: 3; top:0; right: 0; display: none;" onclick="quit">X</button>
<!-- <button id="quit" class="btn" style="z-index: 3; top:0; right: 0;" onclick="quit()">X</button> -->

<script src="/js/main.js"></script>
<script>
    // 1. 거리뷰 레이어 생성
    let streetLayer = new naver.maps.StreetLayer();
    naver.maps.Event.once(map, 'init', function() {
        streetLayer.setMap(null);
    });

    // 2. 거리뷰 버튼에 이벤트 바인딩
    function viewStreet(){
        
        let btn = $('#street');
        //e.preventDefault();
            
        if(streetLayer.getMap()){
            streetLayer.setMap(null);
        } else {
            streetLayer.setMap(map);
        }
    }

    
    // 3. 지도 클릭 이벤트를 받아 파노라마 위치 갱신.
    naver.maps.Event.addListener(map, 'click', function(e){
        if(streetLayer.getMap()) {
            let latlng = e.coord;

            document.getElementById("quit").style.display = "block";
            pano.setVisible(true);
            pano.setPosition(latlng);
        }
    })

    function quit() {
        alert('되나');
    }
</script>
</body>
</html>